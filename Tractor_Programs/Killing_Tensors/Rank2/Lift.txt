HauserTractorLift2:=proc(K,Gamma,Q) local Bv,Bf,dimbase,Fv,ktb,ytb,Ytb,mtb,Mtb,KA,LA,MA,dK,L,numK,numL,numM,dL,dLs,M,Kcomps,Lcomps,Mcomps,COMPS,liftedKT;
Bv:=DGinformation(Q,"FrameBaseVectors");
Bf:=DGinformation(Q,"FrameBaseForms");

dimbase:=nops(Bv);
Fv:=DGinformation(Q,"FrameFiberVectors");

#Here we get the independent components list for each tensor.

ktb:=YoungTableauBasis([2],dimbase,output="Matrix");
KA:=[seq([ktb[i][1][1],ktb[i][1][2]],i=1..nops(ktb))];
ytb:=YoungTableauBasis([2,1],dimbase,output="Matrix");
Ytb:=map(LinearAlgebra:-Transpose,ytb);
LA:=[seq([Ytb[i][1][1],Ytb[i][1][2],Ytb[i][2][1]],i=1..nops(Ytb))];
mtb:=YoungTableauBasis([2,2],dimbase,output="Matrix");
Mtb:=map(LinearAlgebra:-Transpose,mtb);
MA:=[seq([Mtb[i][1][1],Mtb[i][1][2],Mtb[i][2][1],Mtb[i][2][2]],i=1..nops(Mtb))];

dK:=CovariantDerivative(K,Gamma);

L:=evalDG(2*(-1)*RearrangeIndices(SymmetrizeIndices(dK,[2,3],"SkewSymmetric"),[[3,1],[2]]));

dL:=CovariantDerivative(L,Gamma);
dLs:=SymmetrizeIndices(dL,[3,4],"SkewSymmetric");

M:=evalDG(1/2*(-1)*( dLs + RearrangeIndices(dLs,[[3,1],[4,2]]) ));

Kcomps:=DGinformation(K,"CoefficientList",KA);
Lcomps:=DGinformation(L,"CoefficientList",LA);
Mcomps:=DGinformation(M,"CoefficientList",MA);
COMPS:=ListTools:-FlattenOnce([Kcomps,Lcomps,Mcomps]);

liftedKT:=DGzip(COMPS,Fv,"plus");
end:
